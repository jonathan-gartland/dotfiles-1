colorscheme badwolf

if !exists("vimpager")
    " powerline symbols
    let g:airline_left_sep = ''
    let g:airline_left_alt_sep = ''
    let g:airline_right_sep = ''
    let g:airline_right_alt_sep = ''
endif

if has("autocmd")
    autocmd BufRead .procmailrc set foldmethod=marker filetype=procmail
    autocmd BufNewFile, BufRead Gemfile set filetype=ruby

    autocmd BufRead msmtprc, .msmtprc set filetype=msmtp
    autocmd BufRead .muttrc set filetype=muttrc
endif

" Maps to make handling windows a bit easier
noremap <silent> <leader>ml <C-W>L
noremap <silent> <leader>mk <C-W>K
noremap <silent> <leader>mh <C-W>H
noremap <silent> <leader>mj <C-W>J

"From http://nvie.com/posts/how-i-boosted-my-vim/
nnoremap ; :

" Edit the vimrc file
nmap <silent> <leader>ev :e ~/.vimrc.local<CR>
nmap <silent> <leader>sv :so ~/.vimrc.local<CR>

nmap <silent> <leader>/ :nohlsearch<CR>

:cnoremap <C-A> <Home>
:cnoremap <C-F> <Right>
:cnoremap <C-B> <Left>
:cnoremap <Esc>b <S-Left>
:cnoremap <Esc>f <S-Right>

let g:syntastic_ruby_checkers = ['rubocop']
set laststatus=2

let g:airline_theme='badwolf'

colorscheme badwolf

if has('gui_running')
    "set guioptions-=m                   " Remove the menu
    set guifont=monoOne\ 8
endif

let g:project_use_nerdtree = 1
set rtp+=~/.vim/bundle/vim-project/

call project#rc("~/Projects")
Project 'simple_virtual_machine'
Project 'resume'
Project 'romg'
Project 'HemlockForest'

call project#rc("~/")
Project 'dot-files-forest'
Project 'Dropbox'

" From http://joshldavis.com/2014/04/05/vim-tab-madness-buffers-vs-tabs/

" My preference with using buffers. See `:h hidden` for more details
set hidden

" To open a new empty buffer
" This replaces :tabnew which I used to bind to this mapping
nmap <leader>T :enew<cr>

" Move to the next buffer
nmap <leader>l :bnext<CR>

" Move to the previous buffer
nmap <leader>h :bprevious<CR>

" Close the current buffer and move to the previous one
" This replicates the idea of closing a tab
nmap <leader>bq :bp <BAR> bd #<CR>

" Show all open buffers and their status
nmap <leader>bl :ls<CR>

" https://github.com/thoughtbot/vim-rspec
" RSpec.vim mappings
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>
